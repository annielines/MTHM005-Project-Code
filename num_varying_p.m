%% investigating S, |m| and rho* numercially with varying p

%% generate results
clear

N = 100; % set number of nodes
K = 8; % set degree

% set parameter ranges
q_vec = [0.5, 1, 2];
p_vec = [0:0.05:1];

% set initial condition m = 0
initial_1 = 0.5;

% set maximum number of steps of model until it terminates
max_steps = 28000;

% set number of simulation repeats to average over
sim = 500;

% loop over q values
for i = 1:length(q_vec)

    % update current q value
    q = q_vec(i);

    % loop over p values
    for j = 1:length(p_vec)

        % update current p value
        p = p_vec(j);

        % loop over s simulations
        for k = 1:sim

            % generate graph of fixed degree K with N nodes
            g = G_fixed_degree(N, K);

            % implement coevolutionary nonlinear voter model
            [adj_matrix, consensus_time, opinions_0, opinions_1, conflicting_edges] = coev_nonlinear_voter_model(g, p, q, initial_1, max_steps);

            % find the components of final state
            components = conncomp(graph(adj_matrix));

            % find the sizes of components
            component_sizes = histcounts(components, 1:max(components)+1);

            % store S, |m| and rho* values from each simulation
            s_vec(k) = max(component_sizes) / N;
            m_vec(k) = abs((length(opinions_1) - length(opinions_0)) / N);
            rho_vec(k) = sum(sum(conflicting_edges)) / sum(sum(adj_matrix));

        end

        % find average values of S, |m| and rho* over all simulations
        s_averaged(i,j) = sum(s_vec) / sim;
        m_averaged(i,j) = sum(m_vec) / sim;
        rho_averaged(i,j) = sum(rho_vec) / sim;

    end

end

%% load results and plot graph for reproducibility
clear

% load saved data generated by previous section
load('num_varying_p.mat')

for i = 1:3

    subplot(1, 3, i)
    hold on
    set(gca,'fontsize',16)
    if i == 1
        title('(a) q = 0.5 (q < 1)', 'FontSize', 18)
    elseif i == 2
        title('(b) q = 1', 'FontSize', 18)
    elseif i ==3
        title('(c) q = 2 (q > 1)', 'FontSize', 18)
    end
    xlabel('p', 'FontSize', 16)
    grid on; grid minor
    plot1 = plot(p_vec, s_averaged(i,:), '^-', 'Color','#4C60A9', 'LineWidth', 2, 'MarkerSize', 10);
    plot2 = plot(p_vec, m_averaged(i,:), 'o-', 'Color','#DCAD04', 'LineWidth', 2, 'MarkerSize', 10);
    plot3 = plot(p_vec, rho_averaged(i,:), 'square-', 'Color','#AF5F5A', 'LineWidth', 2, 'MarkerSize', 10);
    axis([0 1.02 0 1.02])
    legend([plot1, plot2, plot3], 'S', '|m|', '\rho*')

end

set(gca,'fontsize',16)